// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {PlonkVerifier} from "../src/verifier.sol";

contract VerifierTest is Test {
PlonkVerifier ZkK1;

function setUp() public{
    ZkK1=new PlonkVerifier();
}

function test_k1Plonk() public{



    bytes memory proof = hex"28af0d8bc51a22704aa46400348a681e4addc1f2f5f35e1ec7df9b291c3a5bff008bc6171c7d5198ba58e392f52e2384caed2dd814bd93f712fa6b6448531068052bc3f658d7edef9dbf6b226210a2cb49ad27b82978cee5818756c5bd75bd270b4a3eb1e815dcfa116aa269074cbcdfdec3089b2247b6935d38380b2e658e1c1cf9ae77e3e7777ba0dc90764226054d0bc6054cadd265bd7c4bd06dfc1dda1908964486389f66b7dd0e112bd0fea4f257083e27699bac135d9f85c66ad5df5e1329665cce3daeab526110f78088e8c23415c55c3f59013ebfbd601d1a74a4bc1faccfdf5eb5a582996e50c5b841125bb4b10d2f877f4ee81003a3de6de305622d4932fa4e5b67819205d15be280f3ac2241b2b123cb9b0768262e5a7769c8b30a1867b02a394daadee36995e27d9a5ae2eb1e4750f2397388cd3aec3c8a02110d2574851c7902e533a04024e284cb19111ee6ad5a19158cc2b95b36befb8d7a06a925b04936ea54c7826d22f3fc9b81c7a56959d9f60d997b10112d3309a8d61cfa3e8b2016fb50d351ab29fc9a129aa7a29cf5db9ba8c571b63dd776274fe21ce868891f859c7c132d4417e74d1b6973e63e07d926f374adda69b0379cf4670b2875bf42dd3d9c84e52972523effe728123e30ce081b36cbd1753d025ef9e60feeecf4c02bdf1ba0ac1e4665e41f4179fcd94f136851cc1fabdaa2b05babd603aa869ef7ee2f783aaf3706854983bb83f970d0f0077f02bb39b82eeb8068e70339197888d24c552a6cf308054092305e2a4640ead0b1bb6da5765a4bf4d54326d740dd9ec3e8ddb5682021e954456a035aefe5db6daeb5e73a2bd49fe9aaa10beb8844401ea6462f5ccba40317819c8bc1bdf1daf8977d5393922e5b8cb3bf2b5b6bfffab418e2504294935766b423ae4d077bb677d6847a5ab340c20114391ea05695a8c9fd4eceb2d23a075029c9093f316c956c54ff88ec886484b741c10c4fff111c006894797857f3cf1c327c27c5806620a51d7faad1ba235d12177228a2bab4f31492633449b4a791737f65cf9330a19e2ae33d9b5b7dbf58bc7a61087d8bbfa7bf4c4e7bb98374e47d25260cb23e70a4ba27349ecab8942591efdf2c9969f450a2a1a7bffd15a4f8184b9c31574e31d08810f0f24cb349644d0ef226cc318dd1b709884c1711560cab151c5bc201410d3ebbe3b5372f5693def87d";
    uint256[12] memory public_inputs = 
    [uint256(3271972277585273897),4923350424019300965,8319390334557635907,29797,2118979638094781223,16745917256665474964,9873369245666257693,5130854077807554147,18125774092087762644,16498808710589742324,15781299285235349643,11679876888075963381];

    uint256 [] memory inputs=new uint256[](12);
    for(uint i=0;i<12;i++) inputs[i]=public_inputs[i];



    bool res=ZkK1.Verify(proof, inputs);

    console.log(res);

}
}
